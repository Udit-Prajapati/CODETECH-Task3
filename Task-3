 create database OnlineRetailStore;
Query OK, 1 row affected (0.36 sec)
________________________________________________________________________________________________________________________
mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| cs23020            |
| db1                |
| db2                |
| fycs               |
| fycs1              |
| fycs20             |
| fycs24             |
| fycs24015          |
| fycs24100          |
| fycs24_10          |
| fycs_15            |
| information_schema |
| mysql              |
| onlineretailstore  |
| performance_schema |
| sakila             |
| student31          |
| sys                |
| world              |
+--------------------+
19 rows in set (0.26 sec)
________________________________________________________________________________________________________________________
mysql> use onlineretailstore;
Database changed
________________________________________________________________________________________________________________________
mysql> CREATE TABLE Products (
    ->     product_id INT PRIMARY KEY AUTO_INCREMENT,
    ->     product_name VARCHAR(255) NOT NULL,
    ->     description TEXT,
    ->     price DECIMAL(10, 2) NOT NULL,
    ->     stock_quantity INT NOT NULL,
    ->     category VARCHAR(100),
    ->     created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    ->     updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
    -> );
Query OK, 0 rows affected (0.93 sec)
________________________________________________________________________________________________________________________
mysql>
mysql> CREATE TABLE Customers (
    ->     customer_id INT PRIMARY KEY AUTO_INCREMENT,
    ->     first_name VARCHAR(100) NOT NULL,
    ->     last_name VARCHAR(100) NOT NULL,
    ->     email VARCHAR(100) UNIQUE NOT NULL,
    ->     password_hash VARCHAR(255) NOT NULL,
    ->     phone_number VARCHAR(15),
    ->     shipping_address TEXT,
    ->     billing_address TEXT,
    ->     created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    ->     updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
    -> );
Query OK, 0 rows affected (1.22 sec)
________________________________________________________________________________________________________________________
mysql> CREATE TABLE Orders (
    ->     order_id INT PRIMARY KEY AUTO_INCREMENT,
    ->     customer_id INT,
    ->     order_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    ->     status VARCHAR(50) DEFAULT 'Pending', -- e.g., Pending, Shipped, Delivered, Canceled
    ->     total_amount DECIMAL(10, 2),
    ->     shipping_address TEXT,
    ->     billing_address TEXT,
    ->     FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)
    -> );
Query OK, 0 rows affected (1.05 sec)
________________________________________________________________________________________________________________________
mysql>
mysql> CREATE TABLE Order_Items (
    ->     order_item_id INT PRIMARY KEY AUTO_INCREMENT,
    ->     order_id INT,
    ->     product_id INT,
    ->     quantity INT NOT NULL,
    ->     price DECIMAL(10, 2) NOT NULL,
    ->     total_price DECIMAL(10, 2) AS (quantity * price) STORED,
    ->     FOREIGN KEY (order_id) REFERENCES Orders(order_id),
    ->     FOREIGN KEY (product_id) REFERENCES Products(product_id)
    -> );
Query OK, 0 rows affected (1.12 sec)
______________________________________________________________________________________________________________________________________
mysql>
mysql> CREATE TABLE Payments (
    ->     payment_id INT PRIMARY KEY AUTO_INCREMENT,
    ->     order_id INT,
    ->     payment_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    ->     payment_method VARCHAR(50), -- e.g., Credit Card, PayPal, etc.
    ->     payment_status VARCHAR(50) DEFAULT 'Pending', -- e.g., Pending, Completed, Failed
    ->     amount DECIMAL(10, 2),
    ->     FOREIGN KEY (order_id) REFERENCES Orders(order_id)
    -> );
Query OK, 0 rows affected (1.71 sec)
____________________________________________________________________________________________________________________________________
mysql> INSERT INTO Products (product_name, description, price, stock_quantity, category)
    -> VALUES ('Example Product', 'This is a description of the product', 19.99, 100, 'Category1');
Query OK, 1 row affected (0.17 sec)
_____________________________________________________________________________________________________________________________________
mysql> INSERT INTO Customers (first_name, last_name, email, password_hash, phone_number, shipping_address, billing_address)
    -> VALUES ('John', 'Doe', 'john.doe@example.com', 'hashed_password', '1234567890', '123 Elm St', '123 Elm St');
Query OK, 1 row affected (0.06 sec)
_______________________________________________________________________________________________________________________________________
mysql> INSERT INTO Orders (customer_id, total_amount, shipping_address, billing_address)
    -> VALUES (1, 59.97, '123 Elm St', '123 Elm St');
Query OK, 1 row affected (0.05 sec)
____________________________________________________________________________________________________________________________________
mysql> INSERT INTO Order_Items (order_id, product_id, quantity, price)
    -> VALUES (1, 1, 3, 19.99);
Query OK, 1 row affected (0.06 sec)
___________________________________________________________________________________________________________________________________
mysql> UPDATE Products
    -> SET stock_quantity = stock_quantity - 3
    -> WHERE product_id = 1;
Query OK, 1 row affected (0.07 sec)
Rows matched: 1  Changed: 1  Warnings: 0
____________________________________________________________________________________________________________________________________
mysql> INSERT INTO Payments (order_id, payment_method, payment_status, amount)
    -> VALUES (1, 'Credit Card', 'Completed', 59.97);
Query OK, 1 row affected (0.04 sec)
______________________________________________________________________________________________________________________________________
mysql> UPDATE Payments
    -> SET payment_status = 'Failed'
    -> WHERE payment_id = 1;
Query OK, 1 row affected (0.05 sec)
Rows matched: 1  Changed: 1  Warnings: 0
_______________________________________________________________________________________________________________________________________
mysql> SELECT o.order_id, o.order_date, o.status AS order_status,
    ->        p.payment_status, p.amount AS payment_amount,
    ->        oi.product_id, oi.quantity, oi.total_price
    -> FROM Orders o
    -> JOIN Payments p ON o.order_id = p.order_id
    -> JOIN Order_Items oi ON o.order_id = oi.order_id
    -> WHERE o.customer_id = 1;
+----------+---------------------+--------------+----------------+----------------+------------+----------+-------------+
| order_id | order_date          | order_status | payment_status | payment_amount | product_id | quantity | total_price |
+----------+---------------------+--------------+----------------+----------------+------------+----------+-------------+
|        1 | 2024-12-23 13:41:24 | Pending      | Failed         |          59.97 |          1 |        3 |       59.97 |
+----------+---------------------+--------------+----------------+----------------+------------+----------+-------------+
1 row in set (0.00 sec)
__________________________________________________________________________________________________________________________________________
mysql> SELECT product_id, product_name, price, stock_quantity
    -> FROM Products
    -> WHERE stock_quantity > 0;
+------------+-----------------+-------+----------------+
| product_id | product_name    | price | stock_quantity |
+------------+-----------------+-------+----------------+
|          1 | Example Product | 19.99 |             97 |
+------------+-----------------+-------+----------------+
1 row in set (0.00 sec)
____________________________________________________________________________________________________________________________________________
mysql> SELECT order_id, order_date, status, total_amount
    -> FROM Orders
    -> WHERE customer_id = 1
    -> ORDER BY order_date DESC;
+----------+---------------------+---------+--------------+
| order_id | order_date          | status  | total_amount |
+----------+---------------------+---------+--------------+
|        1 | 2024-12-23 13:41:24 | Pending |        59.97 |
+----------+---------------------+---------+--------------+
1 row in set (0.00 sec)
